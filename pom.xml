<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>com.github.xiongxcodes</groupId>
		<artifactId>haohope-parent</artifactId>
		<version>1.0.0</version>
	</parent>
	<artifactId>haohope-server</artifactId>
	<version>${revision}</version>
	<packaging>pom</packaging>
	<properties>
		<java.version>1.8</java.version>
		<maven.source.plugin.version>3.2.1</maven.source.plugin.version>
		<maven.compiler.plugin.version>3.8.1</maven.compiler.plugin.version>
		<maven.javadoc.plugin.version>3.2.0</maven.javadoc.plugin.version>
		<flatten-maven-plugin.version>1.2.5</flatten-maven-plugin.version>
		<maven.gpg.plugin.version>1.6</maven.gpg.plugin.version>
		<nexus-staging-maven-plugin.version>1.6.7</nexus-staging-maven-plugin.version>
		<revision>1.0.1</revision>
		<haohope-bom.version>1.0.0</haohope-bom.version>
	</properties>
	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>com.github.xiongxcodes</groupId>
				<artifactId>api-boot-dependencies</artifactId>
				<version>0.0.1-SNAPSHOT</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>
	<developers>
		<developer>
			<id>xiongx</id>
			<name>xiongx</name>
			<email>348953327@qq.com</email>
			<url>https://gitee.com/xiongxcodes</url>
			<organization>xiongxcodes</organization>
			<organizationUrl>https://github.com/xiongxcodes</organizationUrl>
		</developer>
	</developers>
	<scm>
		<connection>scm:git:https://github.com/xiongxcodes/haohope-server.git</connection>
		<developerConnection>scm:git:https://github.com/xiongxcodes/haohope-server.git</developerConnection>
		<url>https://github.com/xiongxcodes/haohope-server</url>
		<tag>HEAD</tag>
	</scm>
	<licenses>
		<license>
			<name>Apache License, Version 2.0</name>
			<url>http://www.apache.org/licenses/LICENSE-2.0</url>
		</license>
	</licenses>
	<!--正式版本发布到Maven Central -->
	<distributionManagement>
		<snapshotRepository>
			<id>snapshots</id>
			<url>http://develop:8081/repository/maven-snapshots/</url>
		</snapshotRepository>
		<repository>
			<id>sonatype-releases</id>
			<url>https://oss.sonatype.org/service/local/staging/deploy/maven2/</url>
		</repository>
	</distributionManagement>
	<repositories>
		<!--配置拉取Maven仓库正式版依赖 -->
		<repository>
			<id>repo1-central</id>
			<url>https://repo1.maven.org/maven2/</url>
			<releases>
				<enabled>true</enabled>
			</releases>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
		<!--配置拉取私有仓库快照依赖 -->
		<repository>
			<id>snapshots</id>
			<url>http://develop:8081/repository/maven-snapshots/</url>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
			<releases>
				<enabled>false</enabled>
			</releases>
		</repository>
	</repositories>
	<build>
		<plugins>
			<!--生成Source jar文件 -->
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>${maven.compiler.plugin.version}</version>
				<configuration>
					<source>${java.version}</source>
					<target>${java.version}</target>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-source-plugin</artifactId>
				<version>${maven.source.plugin.version}</version>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>jar-no-fork</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>${maven.javadoc.plugin.version}</version>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<artifactId>maven-gpg-plugin</artifactId>
				<version>${maven.gpg.plugin.version}</version>
				<executions>
					<execution>
						<id>sign-artifacts</id>
						<phase>verify</phase>
						<goals>
							<goal>sign</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>flatten-maven-plugin</artifactId>
				<version>${flatten-maven-plugin.version}</version>
				<executions>
					<execution>
						<id>flatten</id>
						<phase>process-resources</phase>
						<goals>
							<goal>flatten</goal>
						</goals>
					</execution>
					<execution>
						<id>flatten.clean</id>
						<phase>clean</phase>
						<goals>
							<goal>clean</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<updatePomFile>true</updatePomFile>
					<flattenMode>resolveCiFriendliesOnly</flattenMode>
				</configuration>
			</plugin>
			<!-- Nexus Staging Maven插件是将组件部署到OSSRH并将其发布到Central Repository的推荐方法 -->
			<plugin>
				<groupId>org.sonatype.plugins</groupId>
				<artifactId>nexus-staging-maven-plugin</artifactId>
				<version>${nexus-staging-maven-plugin.version}</version>
				<extensions>true</extensions>
				<configuration>
					<serverId>sonatype-releases</serverId>
					<nexusUrl>https://oss.sonatype.org/</nexusUrl>
					<autoReleaseAfterClose>false</autoReleaseAfterClose>
				</configuration>
			</plugin>
		</plugins>
	</build>
	<modules>
		<module>haohope-distributedlock-annotation</module>
		<module>haohope-distributedlock-core</module>
		<module>haohope-authorizationserver-spring-boot-starter</module>
		<module>haohope-resourceserver-spring-boot-starter</module>
		<module>haohope-server-denpendencies</module>
	</modules>
</project>